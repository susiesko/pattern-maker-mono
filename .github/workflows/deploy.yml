name: Deploy to Railway

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, labeled]
  workflow_dispatch:

jobs:
  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'pr' }}
    defaults:
      run:
        working-directory: ./api
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to production (Fly.io)
        if: github.ref == 'refs/heads/main'
        run: |
          echo -e "\033[34m🚀 Production still uses Fly.io - use deploy-old.yml\033[0m"
          echo "ℹ️ Production deployments still use Fly.io" >> $GITHUB_STEP_SUMMARY
      
      - name: Deploy PR API to Railway
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'preview-app')
        run: |
          PR_APP="beadpantry-api-pr-${{ github.event.number }}"
          echo -e "\033[35m🔧 Setting up PR API app on Railway: $PR_APP\033[0m"
          
          # Login to Railway
          railway login --token ${{ secrets.RAILWAY_TOKEN }}
          
          # Create new project
          echo -e "\033[33m📦 Creating Railway project: $PR_APP\033[0m"
          railway create $PR_APP
          
          # Set environment variables
          echo -e "\033[33m🔐 Setting environment variables for: $PR_APP\033[0m"
          railway env set RAILS_ENV=production
          railway env set JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
          railway env set RAILS_MASTER_KEY="${{ secrets.RAILS_MASTER_KEY }}"
          railway env set ALLOWED_ORIGINS="*"
          
          # Add PostgreSQL database
          echo -e "\033[33m🗄️ Adding PostgreSQL database\033[0m"
          railway service create --name postgres
          railway env set DATABASE_URL='${{POSTGRES.DATABASE_URL}}'
          
          # Deploy API
          echo -e "\033[34m🚀 Deploying API to Railway: $PR_APP\033[0m"
          railway deploy --service $PR_APP
          
          # Get deployment URL
          RAILWAY_URL=$(railway status --json | jq -r '.deployments[0].url // empty')
          if [ -z "$RAILWAY_URL" ]; then
            RAILWAY_URL="https://$PR_APP.railway.app"
          fi
          
          echo -e "\033[32m✅ API deployment complete: $RAILWAY_URL\033[0m"
          echo "🚀 PR API deployed: $RAILWAY_URL" >> $GITHUB_STEP_SUMMARY
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-api
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'preview-app')
    defaults:
      run:
        working-directory: ./ui
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Build and deploy frontend to Railway
        run: |
          PR_APP_API="beadpantry-api-pr-${{ github.event.number }}"
          PR_APP_UI="beadpantry-ui-pr-${{ github.event.number }}"
          
          echo -e "\033[35m🔧 Building frontend for PR: $PR_APP_UI\033[0m"
          
          # Set API URL for build
          API_URL="https://$PR_APP_API.railway.app"
          echo "VITE_API_URL=$API_URL/api/v1" > .env.production
          echo "VITE_LOG_LEVEL=error" >> .env.production
          
          # Build frontend
          npm run build
          echo -e "\033[32m✅ Frontend build complete with API: $API_URL/api/v1\033[0m"
          
          # Login to Railway
          railway login --token ${{ secrets.RAILWAY_TOKEN }}
          
          # Create frontend project
          echo -e "\033[33m📦 Creating Railway frontend project: $PR_APP_UI\033[0m"
          railway create $PR_APP_UI
          
          # Deploy frontend (Railway will auto-detect static site)
          echo -e "\033[34m🚀 Deploying frontend to Railway: $PR_APP_UI\033[0m"
          railway deploy --service $PR_APP_UI
          
          # Get frontend URL
          FRONTEND_URL="https://$PR_APP_UI.railway.app"
          echo -e "\033[32m✅ Frontend deployed: $FRONTEND_URL\033[0m"
          echo "🌐 Frontend deployed: $FRONTEND_URL" >> $GITHUB_STEP_SUMMARY
          echo "🔗 API URL: $API_URL/api/v1" >> $GITHUB_STEP_SUMMARY
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}