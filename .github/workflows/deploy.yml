name: Deploy to Fly.io

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy API
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'pr' }}
    defaults:
      run:
        working-directory: ./api
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          echo -e "\033[34m🚀 Deploying to production app: beadpantry-api\033[0m"
          flyctl deploy --remote-only --app beadpantry-api --config ./fly.toml
          echo -e "\033[32m✅ Production deployment complete: https://beadpantry-api.fly.dev\033[0m"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Deploy PR preview
        if: github.event_name == 'pull_request'
        run: |
          PR_APP="beadpantry-api-pr-${{ github.event.number }}"
          echo -e "\033[35m🔧 Setting up PR preview app: $PR_APP\033[0m"
          
          # Debug: Show all apps and search for our specific app
          echo -e "\033[36m📋 All apps:\033[0m"
          flyctl apps list
          echo -e "\033[36m🔍 Looking for app: $PR_APP\033[0m"
          flyctl apps list | grep "$PR_APP" || echo "No matching app found"
          
          # Debug: Show all apps and search for our specific app
          echo -e "\033[36m📋 All apps:\033[0m"
          flyctl apps list
          echo -e "\033[36m🔍 Looking for app: $PR_APP\033[0m"
          flyctl apps list | grep "$PR_APP" || echo "No matching app found"
          
          # Create app
          if ! flyctl apps list | grep -q $PR_APP; then
            echo -e "\033[33m📦 Creating new app: $PR_APP\033[0m"
            flyctl apps create $PR_APP --org personal
          else
            echo -e "\033[36m♻️  App already exists: $PR_APP\033[0m"
          fi
          
          # Set secrets for PR app
          echo -e "\033[33m🔐 Setting secrets for: $PR_APP\033[0m"
          flyctl secrets set --app $PR_APP \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            RAILS_MASTER_KEY="${{ secrets.RAILS_MASTER_KEY }}" \
            ALLOWED_ORIGINS="*"
          
          # Deploy to PR app
          echo -e "\033[34m🚀 Deploying PR app: $PR_APP\033[0m"
          flyctl deploy --remote-only --app $PR_APP --config ./fly.toml
          echo -e "\033[32m✅ PR deployment complete: https://$PR_APP.fly.dev\033[0m"
          echo "🚀 PR app deployed: https://$PR_APP.fly.dev" >> $GITHUB_STEP_SUMMARY
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./ui
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend with PR API URL
        run: |
          PR_APP="beadpantry-api-pr-${{ github.event.number }}"
          echo -e "\033[35m🔧 Building frontend for PR: $PR_APP\033[0m"
          echo "VITE_API_URL=https://$PR_APP.fly.dev/api/v1" > .env.production
          echo "VITE_LOG_LEVEL=error" >> .env.production
          npm run build
          echo -e "\033[32m✅ Frontend build complete with API: https://$PR_APP.fly.dev/api/v1\033[0m"
      
      - name: Deploy to Cloudflare Pages
        run: |
          PR_APP="beadpantry-api-pr-${{ github.event.number }}"
          PROJECT_NAME="beadpantry-ui-pr-${{ github.event.number }}"
          echo -e "\033[34m🚀 Deploying frontend to Cloudflare: $PROJECT_NAME\033[0m"
          
          npx wrangler pages deploy dist \
            --project-name="$PROJECT_NAME" \
            --compatibility-date=2024-01-01
          
          echo -e "\033[32m✅ Frontend deployed: https://$PROJECT_NAME.pages.dev\033[0m"
          echo "🌐 Frontend deployed: https://$PROJECT_NAME.pages.dev" >> $GITHUB_STEP_SUMMARY
          echo "🔗 API URL: https://$PR_APP.fly.dev/api/v1" >> $GITHUB_STEP_SUMMARY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}